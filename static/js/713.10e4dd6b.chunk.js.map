{"version":3,"file":"static/js/713.10e4dd6b.chunk.js","mappings":"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","sources":["components/CenteredMessage/CenteredMessage.styled.jsx","components/CenteredMessage/CenteredMessage.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/PageContainer/PageContainer.styled.jsx","components/PageContainer/PageContainer.jsx","components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/MovieSearchForm/MovieSearchForm.styled.jsx","components/MovieSearchForm/MovieSearchForm.jsx","pages/Movies.jsx","utils/api.js","utils/constants.js","utils/swalConfig.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 30vh;\n  font-size: 72px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.secondary};\n  opacity: 15%;\n  user-select: none;\n  text-transform: uppercase;\n  font-family: 'Poppins', sans-serif;\n`;\n","import PropTypes from 'prop-types';\nimport { MessageContainer } from './CenteredMessage.styled';\n\nconst CenteredMessage = ({ message }) => {\n  return <MessageContainer>{message}</MessageContainer>;\n};\n\nCenteredMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default CenteredMessage;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  font-size: 14px;\n`;\n\nexport const MovieItem = styled.li`\n  /* &:not(:last-child) {\n    margin-bottom: 1rem;\n  } */\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  color: ${props => props.theme.colors.secondary};\n  background-color: ${props => props.theme.colors.darkReviewBackground};\n\n  &:nth-child(even) {\n    background-color: ${props => props.theme.colors.lightReviewBackground};\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: ${props => props.theme.colors.secondary};\n\n  &:hover {\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieListStyled, MovieItem, MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title }) => (\n        <React.Fragment key={id}>\n          {title ? (\n            <MovieItem>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </MovieLink>\n            </MovieItem>\n          ) : null}\n        </React.Fragment>\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const StyledPageContainer = styled.div`\n  padding: 10px;\n`;\n","import { StyledPageContainer } from './PageContainer.styled';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children }) => (\n  <StyledPageContainer>{children}</StyledPageContainer>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import styled from 'styled-components';\n\nexport const PageTitleStyled = styled.h1`\n  margin-bottom: 40px;\n  text-align: center;\n  font-size: 36px;\n  color: ${props => props.theme.colors.primary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageTitleStyled } from './PageTitle.styled';\n\nconst PageTitle = ({ title }) => <PageTitleStyled>{title}</PageTitleStyled>;\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PageTitle;\n","import styled from 'styled-components';\n\nexport const StyledMovieForm = styled.form`\n  display: flex;\n  gap: 1em;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  flex: 0.5;\n  padding: 0.5em;\n  border-radius: 4px;\n  border: 2px solid ${props => props.theme.colors.secondary};\n  outline: none;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 0.5em 1em;\n  border-radius: 4px;\n  border: none;\n  background-color: ${props => props.theme.colors.secondary};\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.primary};\n  }\n\n  &:disabled {\n    background-color: ${props => props.theme.colors.primaryUnactive};\n    cursor: not-allowed;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledMovieForm, Input, SubmitButton } from './MovieSearchForm.styled';\n\nconst MovieSearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const nextParams = inputValue !== '' ? { query: inputValue } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <StyledMovieForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Search...\"\n        autoFocus={true}\n      />\n      <SubmitButton type=\"submit\">Search</SubmitButton>\n    </StyledMovieForm>\n  );\n};\n\nexport default MovieSearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport CenteredMessage from 'components/CenteredMessage/CenteredMessage';\nimport MovieList from 'components/MovieList/MovieList';\nimport MovieSearchForm from 'components/MovieSearchForm/MovieSearchForm';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport PageContainer from 'components/PageContainer';\n\nimport { fetchQueryMovies } from 'utils/api';\nimport showMessage from 'utils/swalConfig';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [state, setState] = useState('idle');\n  const [searchQuery, setSearchQuery] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    let isSubscribed = true;\n    const query = searchParams.get('query');\n    if (query) {\n      setSearchQuery(query);\n      setState('pending');\n\n      const fetchMovies = async () => {\n        try {\n          const data = await fetchQueryMovies(query);\n          if (isSubscribed) {\n            setMovies(data);\n            setState('responded');\n          }\n        } catch (error) {\n          showMessage(\n            `Search for '${searchQuery}' failed. Please try again...`\n          );\n          if (isSubscribed) {\n            setState('rejected');\n          }\n        }\n      };\n      fetchMovies();\n    }\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [searchParams, searchQuery]);\n\n  return (\n    <PageContainer>\n      <PageTitle title={'Search for a movie'} />\n      <MovieSearchForm />\n\n      {state === 'idle' && <CenteredMessage message={'Enter a movie name'} />}\n\n      {state === 'pending' && null}\n\n      {state === 'rejected' && (\n        <CenteredMessage\n          message={`Search for '${searchQuery}' failed. Please try again...`}\n        />\n      )}\n\n      {state === 'responded' && movies.length === 0 && (\n        <CenteredMessage message={`No movies found for \"${searchQuery}\"`} />\n      )}\n\n      {state === 'responded' && movies.length > 0 && (\n        <>\n          <MovieList movies={movies} location={location} />\n        </>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport NProgress from 'nprogress';\n\nimport { API_KEY } from './constants.js';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  try {\n    NProgress.start();\n    const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(query) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    NProgress.done();\n    return res.data;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchCastMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.cast;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchReviewMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n","export const API_KEY = '5ba3a910e660e35337f3e89e0f4cf206';\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MAX_REVIEW_LENGTH = 600;\n","import Swal from 'sweetalert2';\n\nconst showMessage = message => {\n  Swal.fire({\n    icon: 'warning',\n    title: 'Oops...',\n    text: message,\n    timer: 3000,\n  });\n};\n\nexport default showMessage;\n"],"names":["MessageContainer","styled","props","theme","colors","secondary","message","MovieListStyled","MovieItem","darkReviewBackground","lightReviewBackground","MovieLink","Link","primary","movies","location","map","id","title","to","state","from","StyledPageContainer","children","PageTitleStyled","StyledMovieForm","Input","SubmitButton","primaryUnactive","useSearchParams","searchParams","setSearchParams","useState","get","inputValue","setInputValue","onSubmit","event","preventDefault","query","type","value","onChange","target","placeholder","autoFocus","setMovies","setState","searchQuery","setSearchQuery","useLocation","useEffect","isSubscribed","fetchMovies","fetchQueryMovies","data","showMessage","PageContainer","PageTitle","CenteredMessage","length","MovieList","fetchTrendMovies","NProgress","axios","API_KEY","res","results","fetchDetailsMovie","movieId","fetchCastMovie","cast","fetchReviewMovie","IMAGE_BASE_URL","MAX_REVIEW_LENGTH","Swal","icon","text","timer"],"sourceRoot":""}