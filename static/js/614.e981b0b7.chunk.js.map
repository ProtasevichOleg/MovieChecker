{"version":3,"file":"static/js/614.e981b0b7.chunk.js","mappings":"wPAEaA,EAAiBC,EAAAA,GAAAA,GAAH,6HAOdC,EAAQD,EAAAA,GAAAA,GAAH,wJAMP,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,IAGHC,EAAYN,EAAAA,GAAAA,EAAH,2CAITO,EAAaP,EAAAA,GAAAA,IAAH,qE,+ECcvB,EA1BiB,SAAC,GAAD,IAAGQ,EAAH,EAAGA,KAAH,OACf,SAACT,EAAD,UACGS,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACR,UAACX,EAAD,YACE,SAACM,EAAD,CACEM,IAAKF,EAAeG,EAAAA,GAAiBH,EAAeI,EACpDC,IAAKJ,EACLK,MAAO,IACPC,OAAQ,OAEV,SAACZ,EAAD,UAAYM,MAPFF,EADJ,KAFG,E,wCCoDjB,EApDa,WACX,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,QAAnC,eAAOE,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAe,EAEbC,EAAS,mCAAG,2FAChBH,EAAS,WADO,mBAGKI,EAAAA,EAAAA,IAAeT,GAHpB,OAGRU,EAHQ,OAIVH,IACFJ,EAAQO,GACRL,EAAS,cANG,iDASdM,EAAAA,EAAAA,GAAY,gDACRJ,GACFF,EAAS,YAXG,yDAAH,qDAkBf,OAFAG,IAEO,WACLD,GAAe,CAChB,CACF,GAAE,CAACP,KAGF,iCACE,SAACY,EAAA,EAAD,CAAUC,MAAO,SAEN,YAAVT,GAAuB,KAEb,aAAVA,IACC,SAACU,EAAA,EAAD,CACEC,QAAS,iDAIF,cAAVX,GAAyC,IAAhBf,EAAK2B,SAC7B,SAACF,EAAA,EAAD,CAAiBC,QAAS,kBAGjB,cAAVX,GAAyBf,EAAK2B,OAAS,IAAK,SAAC,EAAD,CAAU3B,KAAMA,MAGlE,C,sEC1DY4B,E,QAAmBpC,GAAAA,IAAH,0SAQlB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,I,SCChB,EARwB,SAAC,GAAiB,IAAf6B,EAAc,EAAdA,QACzB,OAAO,SAACE,EAAD,UAAmBF,GAC3B,C,4ICHYG,E,QAAiBrC,GAAAA,GAAH,+DAEhB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOkC,OAAvB,I,SCKhB,EANiB,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAH,OAAe,SAACK,EAAD,UAAiBL,GAAhC,C,+NCIV,SAAeO,IAAtB,4CAAO,OAAP,oBAAO,oGAEHC,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,mCAAsCC,EAAAA,KAHrD,cAGGC,EAHH,OAIHH,IAAAA,OAJG,kBAKIG,EAAId,KAAKe,SALb,sCAOHJ,IAAAA,OAPG,qFAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFAEHN,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,+BACQC,EAAAA,GADR,4DACmEI,IAJlF,cAGGH,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAId,KAAKe,SAPb,sCASHJ,IAAAA,OATG,qFAcA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiC5B,GAAjC,uFAEHqB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPtB,EADO,oBACYuB,EAAAA,GADZ,4CAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAId,MAPR,sCASHW,IAAAA,OATG,qFAcA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BT,GAA9B,uFAEHqB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPtB,EADO,4BACoBuB,EAAAA,GADpB,oBAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAId,KAAKrB,MAPb,sCASHgC,IAAAA,OATG,qFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgC7B,GAAhC,uFAEHqB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPtB,EADO,4BACoBuB,EAAAA,GADpB,oBAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAId,KAAKe,SAPb,sCASHJ,IAAAA,OATG,qFAxDPC,EAAAA,EAAAA,SAAAA,QAAyB,+B,wGCLlB,IAAMC,EAAU,mCAEV5B,EAAiB,kCAEjBmC,EAAoB,G,8CCOjC,IAToB,SAAAf,GAClBgB,IAAAA,KAAU,CACRC,KAAM,UACNnB,MAAO,UACPoB,KAAMlB,EACNmB,MAAO,KAEV,C","sources":["components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast.jsx","components/CenteredMessage/CenteredMessage.styled.jsx","components/CenteredMessage/CenteredMessage.jsx","components/SubTitle/SubTitle.styled.jsx","components/SubTitle/SubTitle.jsx","utils/api.js","utils/constants.js","utils/swalConfig.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: calc((100% - 150px * 6) / 5);\n  row-gap: 48px;\n`;\n\nexport const Actor = styled.li`\n  max-width: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  color: ${props => props.theme.colors.secondary};\n`;\n\nexport const ActorName = styled.p`\n  padding: 5px 0;\n`;\n\nexport const ActorImage = styled.img`\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  CastListStyled,\n  Actor,\n  ActorName,\n  ActorImage,\n} from './CastList.styled';\nimport AvatarImage from 'images/missing-actor.png';\nimport { IMAGE_BASE_URL } from 'utils/constants';\n\nconst CastList = ({ cast }) => (\n  <CastListStyled>\n    {cast.map(({ id, profile_path, name }) => (\n      <Actor key={id}>\n        <ActorImage\n          src={profile_path ? IMAGE_BASE_URL + profile_path : AvatarImage}\n          alt={name}\n          width={150}\n          height={225}\n        />\n        <ActorName>{name}</ActorName>\n      </Actor>\n    ))}\n  </CastListStyled>\n);\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default CastList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CastList from 'components/CastList';\nimport CenteredMessage from 'components/CenteredMessage';\nimport SubTitle from 'components/SubTitle';\n\nimport { fetchCastMovie } from 'utils/api';\nimport showMessage from 'utils/swalConfig';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [state, setState] = useState('idle');\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    const fetchCast = async () => {\n      setState('pending');\n      try {\n        const data = await fetchCastMovie(movieId);\n        if (isSubscribed) {\n          setCast(data);\n          setState('responded');\n        }\n      } catch (error) {\n        showMessage('Cast loading failed. Please refresh the page');\n        if (isSubscribed) {\n          setState('rejected');\n        }\n      }\n    };\n\n    fetchCast();\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <SubTitle title={'Cast'} />\n\n      {state === 'pending' && null}\n\n      {state === 'rejected' && (\n        <CenteredMessage\n          message={'Cast loading failed. Please refresh the page'}\n        />\n      )}\n\n      {state === 'responded' && cast.length === 0 && (\n        <CenteredMessage message={'No cast found'} />\n      )}\n\n      {state === 'responded' && cast.length > 0 && <CastList cast={cast} />}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 30vh;\n  font-size: 72px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.secondary};\n  opacity: 15%;\n  user-select: none;\n  text-transform: uppercase;\n  font-family: 'Poppins', sans-serif;\n`;\n","import PropTypes from 'prop-types';\nimport { MessageContainer } from './CenteredMessage.styled';\n\nconst CenteredMessage = ({ message }) => {\n  return <MessageContainer>{message}</MessageContainer>;\n};\n\nCenteredMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default CenteredMessage;\n","import styled from 'styled-components';\n\nexport const SubTitleStyled = styled.h2`\n  margin-bottom: 30px;\n  color: ${props => props.theme.colors.primary};\n`;\n","import { SubTitleStyled } from './SubTitle.styled';\nimport PropTypes from 'prop-types';\n\nconst SubTitle = ({ title }) => <SubTitleStyled>{title}</SubTitleStyled>;\n\nSubTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SubTitle;\n","import axios from 'axios';\nimport NProgress from 'nprogress';\n\nimport { API_KEY } from './constants.js';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  try {\n    NProgress.start();\n    const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(query) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    NProgress.done();\n    return res.data;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchCastMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.cast;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchReviewMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n","export const API_KEY = '5ba3a910e660e35337f3e89e0f4cf206';\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MAX_REVIEW_LENGTH = 600;\n","import Swal from 'sweetalert2';\n\nconst showMessage = message => {\n  Swal.fire({\n    icon: 'warning',\n    title: 'Oops...',\n    text: message,\n    timer: 3000,\n  });\n};\n\nexport default showMessage;\n"],"names":["CastListStyled","styled","Actor","props","theme","colors","secondary","ActorName","ActorImage","cast","map","id","profile_path","name","src","IMAGE_BASE_URL","AvatarImage","alt","width","height","movieId","useParams","useState","setCast","state","setState","useEffect","isSubscribed","fetchCast","fetchCastMovie","data","showMessage","SubTitle","title","CenteredMessage","message","length","MessageContainer","SubTitleStyled","primary","fetchTrendMovies","NProgress","axios","API_KEY","res","results","fetchQueryMovies","query","fetchDetailsMovie","fetchReviewMovie","MAX_REVIEW_LENGTH","Swal","icon","text","timer"],"sourceRoot":""}