{"version":3,"file":"static/js/187.ac95e4be.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","utils/constants.js","utils/api.js","utils/swalConfig.js"],"sourcesContent":["// src/components/Reviews/Reviews.styled.jsx\nimport styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 1em;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.colors.primary};\n  font-size: 1.5rem;\n  margin-bottom: 1em;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  color: ${props => props.theme.colors.secondary};\n  background-color: ${props => props.theme.colors.darkReviewBackground};\n\n  &:nth-child(even) {\n    background-color: ${props => props.theme.colors.lightReviewBackground};\n  }\n\n  strong {\n    font-weight: bold;\n  }\n\n  span {\n    display: inline-block;\n    margin-right: 0.5em;\n  }\n\n  a {\n    color: ${props => props.theme.colors.primary};\n    text-decoration: none;\n    font-weight: bold;\n  }\n`;\n","// src/components/Reviews/Reviews.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewMovie } from 'utils/api';\nimport showMessage from 'utils/swalConfig';\nimport {\n  ReviewsContainer,\n  Title,\n  ReviewList,\n  ReviewItem,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchReviewMovie(movieId)\n      .then(data => {\n        setReviews(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        showMessage(error.message);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  const truncateContent = (content, maxLength) => {\n    if (content.length > maxLength) {\n      return content.substring(0, maxLength) + '...';\n    }\n    return content;\n  };\n\n  return (\n    <ReviewsContainer>\n      <Title>Reviews</Title>\n      {isLoading ? (\n        <p></p>\n      ) : (\n        <ReviewList>\n          {reviews.length > 0 ? (\n            reviews.map(review => (\n              <ReviewItem key={review.id}>\n                <strong>{review.author}</strong>\n                <span>{truncateContent(review.content, 600)}</span>\n                {review.content.length > 200 && (\n                  <a\n                    href={review.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read full review\n                  </a>\n                )}\n              </ReviewItem>\n            ))\n          ) : (\n            <p>no reviews found ðŸ˜ž</p>\n          )}\n        </ReviewList>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = '5ba3a910e660e35337f3e89e0f4cf206';\n","// src/utils/api.js\n\nimport axios from 'axios';\nimport { API_KEY } from './constants.js';\nimport showMessage from './swalConfig.js';\nimport NProgress from 'nprogress';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  try {\n    NProgress.start();\n    const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    showMessage('Error while loading trending movies.');\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(query) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    showMessage('Error while fetching movie by query.');\n    throw error;\n  }\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    NProgress.done();\n    return res.data;\n  } catch (error) {\n    NProgress.done();\n    showMessage('Error while fetching movie details.');\n    throw error;\n  }\n}\n\nexport async function fetchCastMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.cast;\n  } catch (error) {\n    NProgress.done();\n    showMessage('Error while fetching movie cast.');\n    throw error;\n  }\n}\n\nexport async function fetchReviewMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    showMessage('Error while fetching movie reviews.');\n    throw error;\n  }\n}\n","// src/utils/swalConfig.js\nimport Swal from 'sweetalert2';\n\nconst showMessage = message => {\n  Swal.fire({\n    icon: 'warning',\n    title: 'Oops...',\n    text: message,\n    timer: 3000,\n  });\n};\n\nexport default showMessage;\n"],"names":["ReviewsContainer","styled","Title","props","theme","colors","primary","ReviewList","ReviewItem","secondary","darkReviewBackground","lightReviewBackground","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchReviewMovie","then","data","catch","error","showMessage","message","length","map","review","author","content","maxLength","substring","href","url","target","rel","id","API_KEY","fetchTrendMovies","NProgress","axios","res","results","fetchQueryMovies","query","fetchDetailsMovie","fetchCastMovie","cast","Swal","icon","title","text","timer"],"sourceRoot":""}