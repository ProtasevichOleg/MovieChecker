{"version":3,"file":"static/js/896.b4c27d43.chunk.js","mappings":"sLAEaA,E,QAAmBC,GAAAA,IAAH,0SAQlB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,I,SCChB,EARwB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OAAO,SAACN,EAAD,UAAmBM,GAC3B,C,gPCHYC,EAAmBN,EAAAA,GAAAA,GAAH,sBAEhBO,EAAaP,EAAAA,GAAAA,GAAH,0LAIZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,IACM,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,oBAAvB,IAGH,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,qBAAvB,IAIhBC,EAAmBV,EAAAA,GAAAA,OAAH,8CAIhBW,EAAeX,EAAAA,GAAAA,KAAH,0EAKZY,EAAiBZ,EAAAA,GAAAA,EAAH,uFAChB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,OAAvB,I,mBC0BhB,EA1CmB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACdC,EAAkB,SAACC,EAASC,GAChC,OAAID,EAAQE,OAASD,EACZD,EAAQG,UAAU,EAAGF,GAAa,MAEpCD,CACR,EAED,OACE,SAACV,EAAD,UACGQ,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQN,EAAf,EAAeA,QAASO,EAAxB,EAAwBA,IAAxB,OACX,UAAChB,EAAD,YACE,SAACG,EAAD,UAAmBY,KACnB,SAACX,EAAD,UACGI,EAAgBC,EAASQ,EAAAA,MAE3BR,EAAQE,OAASM,EAAAA,KAChB,SAACZ,EAAD,CACEa,KAAMF,EACNG,OAAO,SACPC,IAAI,sBAHN,SAIC,uBAVYN,EADN,KAmBlB,E,8BCsBD,EAnDgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOhB,EAAP,KAAgBiB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,QAAnC,eAAOE,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAe,EACbC,EAAY,mCAAG,2FACnBH,EAAS,WADU,mBAGEI,EAAAA,EAAAA,IAAiBT,GAHnB,OAGXU,EAHW,OAIbH,IACFJ,EAAWO,GACXL,EAAS,cANM,iDASjBM,EAAAA,EAAAA,GAAY,mDACRJ,GACFF,EAAS,YAXM,yDAAH,qDAiBlB,OADAG,IACO,WACLD,GAAe,CAChB,CACF,GAAE,CAACP,KAGF,iCACE,SAACY,EAAA,EAAD,CAAUC,MAAO,YAEN,YAAVT,GAAuB,KAEb,aAAVA,IACC,SAACU,EAAA,EAAD,CACErC,QAAS,oDAIF,cAAV2B,GAAyBlB,EAAQI,OAAS,IACzC,SAAC,EAAD,CAAYJ,QAASA,IAGZ,cAAVkB,GAA4C,IAAnBlB,EAAQI,SAChC,SAACwB,EAAA,EAAD,CAAiBrC,QAAS,uBAIjC,C,sEC1DYsC,E,QAAiB3C,GAAAA,GAAH,+DAEhB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,OAAvB,I,SCKhB,EANiB,SAAC,GAAD,IAAG4B,EAAH,EAAGA,MAAH,OAAe,SAACE,EAAD,UAAiBF,GAAhC,C,+NCIV,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGAEHC,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,mCAAsCC,EAAAA,KAHrD,cAGGC,EAHH,OAIHH,IAAAA,OAJG,kBAKIG,EAAIV,KAAKW,SALb,sCAOHJ,IAAAA,OAPG,qFAYA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFAEHN,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,+BACQC,EAAAA,GADR,4DACmEI,IAJlF,cAGGH,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAIV,KAAKW,SAPb,sCASHJ,IAAAA,OATG,qFAcA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCxB,GAAjC,uFAEHiB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPlB,EADO,oBACYmB,EAAAA,GADZ,4CAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAIV,MAPR,sCASHO,IAAAA,OATG,qFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BzB,GAA9B,uFAEHiB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPlB,EADO,4BACoBmB,EAAAA,GADpB,oBAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAIV,KAAKgB,MAPb,sCASHT,IAAAA,OATG,qFAcA,SAAeR,EAAtB,+CAAO,OAAP,oBAAO,WAAgCT,GAAhC,uFAEHiB,IAAAA,QAFG,SAGeC,EAAAA,EAAAA,IAAA,gBACPlB,EADO,4BACoBmB,EAAAA,GADpB,oBAHf,cAGGC,EAHH,OAMHH,IAAAA,OANG,kBAOIG,EAAIV,KAAKW,SAPb,sCASHJ,IAAAA,OATG,qFAxDPC,EAAAA,EAAAA,SAAAA,QAAyB,+B,wGCLlB,IAAMC,EAAU,mCAEVQ,EAAiB,kCAEjB/B,EAAoB,G,8CCOjC,IAToB,SAAAnB,GAClBmD,IAAAA,KAAU,CACRC,KAAM,UACNhB,MAAO,UACPiB,KAAMrD,EACNsD,MAAO,KAEV,C","sources":["components/CenteredMessage/CenteredMessage.styled.jsx","components/CenteredMessage/CenteredMessage.jsx","components/ReviewList/ReviewList.styled.jsx","components/ReviewList/ReviewList.jsx","components/Reviews.jsx","components/SubTitle/SubTitle.styled.jsx","components/SubTitle/SubTitle.jsx","utils/api.js","utils/constants.js","utils/swalConfig.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 30vh;\n  font-size: 72px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.secondary};\n  opacity: 15%;\n  user-select: none;\n  text-transform: uppercase;\n  font-family: 'Poppins', sans-serif;\n`;\n","import PropTypes from 'prop-types';\nimport { MessageContainer } from './CenteredMessage.styled';\n\nconst CenteredMessage = ({ message }) => {\n  return <MessageContainer>{message}</MessageContainer>;\n};\n\nCenteredMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default CenteredMessage;\n","import styled from 'styled-components';\n\nexport const ReviewListStyled = styled.ul``;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  color: ${props => props.theme.colors.secondary};\n  background-color: ${props => props.theme.colors.darkReviewBackground};\n\n  &:nth-child(even) {\n    background-color: ${props => props.theme.colors.lightReviewBackground};\n  }\n`;\n\nexport const ReviewerNickname = styled.strong`\n  font-weight: bold;\n`;\n\nexport const ReviewewText = styled.span`\n  display: inline-block;\n  margin-right: 0.5em;\n`;\n\nexport const FullReviewLink = styled.a`\n  color: ${props => props.theme.colors.primary};\n  text-decoration: none;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ReviewListStyled,\n  ReviewItem,\n  ReviewerNickname,\n  ReviewewText,\n  FullReviewLink,\n} from './ReviewList.styled';\nimport { MAX_REVIEW_LENGTH } from 'utils/constants';\n\nconst ReviewList = ({ reviews }) => {\n  const truncateContent = (content, maxLength) => {\n    if (content.length > maxLength) {\n      return content.substring(0, maxLength) + '...';\n    }\n    return content;\n  };\n\n  return (\n    <ReviewListStyled>\n      {reviews.map(({ id, author, content, url }) => (\n        <ReviewItem key={id}>\n          <ReviewerNickname>{author}</ReviewerNickname>\n          <ReviewewText>\n            {truncateContent(content, MAX_REVIEW_LENGTH)}\n          </ReviewewText>\n          {content.length > MAX_REVIEW_LENGTH && (\n            <FullReviewLink\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Read full review\n            </FullReviewLink>\n          )}\n        </ReviewItem>\n      ))}\n    </ReviewListStyled>\n  );\n};\n\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ReviewList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CenteredMessage from 'components/CenteredMessage';\nimport ReviewList from 'components/ReviewList';\nimport SubTitle from 'components/SubTitle';\n\nimport { fetchReviewMovie } from 'utils/api';\nimport showMessage from 'utils/swalConfig';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [state, setState] = useState('idle');\n\n  useEffect(() => {\n    let isSubscribed = true;\n    const fetchReviews = async () => {\n      setState('pending');\n      try {\n        const data = await fetchReviewMovie(movieId);\n        if (isSubscribed) {\n          setReviews(data);\n          setState('responded');\n        }\n      } catch (error) {\n        showMessage('Reviews loading failed. Please refresh the page');\n        if (isSubscribed) {\n          setState('rejected');\n        }\n      }\n    };\n\n    fetchReviews();\n    return () => {\n      isSubscribed = false;\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <SubTitle title={'Reviews'} />\n\n      {state === 'pending' && null}\n\n      {state === 'rejected' && (\n        <CenteredMessage\n          message={'Reviews loading failed. Please refresh the page'}\n        />\n      )}\n\n      {state === 'responded' && reviews.length > 0 && (\n        <ReviewList reviews={reviews} />\n      )}\n\n      {state === 'responded' && reviews.length === 0 && (\n        <CenteredMessage message={'No reviews found'} />\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const SubTitleStyled = styled.h2`\n  margin-bottom: 30px;\n  color: ${props => props.theme.colors.primary};\n`;\n","import { SubTitleStyled } from './SubTitle.styled';\nimport PropTypes from 'prop-types';\n\nconst SubTitle = ({ title }) => <SubTitleStyled>{title}</SubTitleStyled>;\n\nSubTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SubTitle;\n","import axios from 'axios';\nimport NProgress from 'nprogress';\n\nimport { API_KEY } from './constants.js';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendMovies() {\n  try {\n    NProgress.start();\n    const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(query) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n    );\n    NProgress.done();\n    return res.data;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchCastMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.cast;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n\nexport async function fetchReviewMovie(movieId) {\n  try {\n    NProgress.start();\n    const res = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    NProgress.done();\n    return res.data.results;\n  } catch (error) {\n    NProgress.done();\n    throw error;\n  }\n}\n","export const API_KEY = '5ba3a910e660e35337f3e89e0f4cf206';\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MAX_REVIEW_LENGTH = 600;\n","import Swal from 'sweetalert2';\n\nconst showMessage = message => {\n  Swal.fire({\n    icon: 'warning',\n    title: 'Oops...',\n    text: message,\n    timer: 3000,\n  });\n};\n\nexport default showMessage;\n"],"names":["MessageContainer","styled","props","theme","colors","secondary","message","ReviewListStyled","ReviewItem","darkReviewBackground","lightReviewBackground","ReviewerNickname","ReviewewText","FullReviewLink","primary","reviews","truncateContent","content","maxLength","length","substring","map","id","author","url","MAX_REVIEW_LENGTH","href","target","rel","movieId","useParams","useState","setReviews","state","setState","useEffect","isSubscribed","fetchReviews","fetchReviewMovie","data","showMessage","SubTitle","title","CenteredMessage","SubTitleStyled","fetchTrendMovies","NProgress","axios","API_KEY","res","results","fetchQueryMovies","query","fetchDetailsMovie","fetchCastMovie","cast","IMAGE_BASE_URL","Swal","icon","text","timer"],"sourceRoot":""}